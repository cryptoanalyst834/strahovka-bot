import 'dotenv/config';
import express       from 'express';
import { Telegraf }  from 'telegraf';
import OpenAI        from 'openai';

const {
  TELEGRAM_TOKEN,
  OPENROUTER_API_KEY,
  DOMAIN,
  PORT = 8080
} = process.env;

if (!TELEGRAM_TOKEN || !OPENROUTER_API_KEY || !DOMAIN) {
  console.error('‚ùå –ó–∞–¥–∞–π—Ç–µ TELEGRAM_TOKEN, OPENROUTER_API_KEY –∏ DOMAIN –≤ env');
  process.exit(1);
}

// In-memory storage per chat
const sessions = new Map();
const privacyMentioned = new Map();

// 1) Express + healthcheck + webhook endpoint
const app = express();
app.use(express.json());
app.get('/', (_req, res) => res.send('OK'));

// 2) Telegram bot
const bot = new Telegraf(TELEGRAM_TOKEN);

// 3) OpenRouter client
const openai = new OpenAI({
  apiKey:  OPENROUTER_API_KEY,
  baseURL: 'https://openrouter.ai/api/v1'
});

// 4) –í–∏–¥–∂–µ—Ç—ã
const services = {
  –û–°–ê–ì–û:                 "https://widgets.inssmart.ru/contract/eosago?appId=bbac9045-39c4-5530-a953-d63f4d081fe0&secret=2d2759bd-a1b0-57a7-803b-520c1a262740",
  "–ú–ò–ù–ò-–ö–ê–°–ö–û":          "https://widgets.inssmart.ru/contract/kasko?appId=293563a6-dcb8-543c-84a7-7a455578884f&secret=5d05ad7d-7fc6-58b8-8851-6de24394a0a6",
  –ò–ø–æ—Ç–µ–∫–∞:               "https://widgets.inssmart.ru/contract/mortgage?appId=e06a1d3f-604c-52d2-bc8a-b9b8e2e7e167&secret=695aa6ff-001b-52ec-99de-0dbd38762b93",
  "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –∏–º—É—â–µ—Å—Ç–≤–∞": "https://widgets.inssmart.ru/contract/property?appId=34daded4-ba8c-5e60-883b-bddd168b35b0&secret=ff271c00-fb5a-5de2-9b9e-fcfb8660da84",
  –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è:           "https://widgets.inssmart.ru/contract/travel?appId=a8bf576a-c303-5c66-8952-5a2a5bcf0b04&secret=95f250f5-b561-5593-99ad-575fec648e4c"
};

// 5) Off-widget topics
const outsideTriggers = [
  "–ö–ê–°–ö–û –ü–û –†–ò–°–ö–ê–ú","–¢–û–¢–ê–õ","–£–ì–û–ù",
  "–î–ú–°","–°–¢–†–ê–•–û–í–ê–ù–ò–ï –ë–ò–ó–ù–ï–°–ê"
];
const outsideWidgetResponse = `
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ—Ç –≤–∏–¥ –æ–Ω–ª–∞–π–Ω-–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.
–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞:

üìß info@straxovka-go.ru  
üåê https://straxovka-go.ru  
üì± WhatsApp: +7 989 120 66 37
`.trim();

// 6) Insurance keywords
const insuranceKeywords = [
  "–û–°–ê–ì–û","–ö–ê–°–ö–û","–î–ú–°","–ò–ü–û–¢–ï–ö–ê","–ò–ú–£–©–ï–°–¢–í–û",
  "–°–¢–†–ê–•–û–í–ê–ù–ò–ï","–ü–û–õ–ò–°","–î–û–ö–£–ú–ï–ù–¢","–î–¢–ü",
  "–°–¢–û–ò–ú–û–°–¢–¨","–ü–£–¢–ï–®–ï–°–¢–í–ò–ï"
];

// 7) Blocked topics
const blockedTopics = [
  // politics
  "–ü–û–õ–ò–¢–ò–ö–ê","–ü–†–ê–í–ò–¢–ï–õ–¨–°–¢–í–û","–í–´–ë–û–†–´","–í–û–ô–ù–ê",
  // religion
  "–ë–û–ì","–¶–ï–†–ö–û–í–¨","–†–ï–õ–ò–ì–ò–Ø",
  // medicine
  "–ú–ï–î–ò–¶–ò–ù","–õ–ï–ö–ê–†–°–¢–í–û","–í–†–ê–ß"
];
const blockedResponse = `
–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –º–æ–≥—É –æ–±—Å—É–∂–¥–∞—Ç—å —ç—Ç—É —Ç–µ–º—É.
–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å ‚Äî —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:

üìß info@straxovka-go.ru  
üåê https://straxovka-go.ru
`.trim();

// 8) /start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
bot.start(ctx => {
  const keyboard = Object.keys(services).map(k => ([{ text: k }]));
  return ctx.reply(
    "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫.\n" +
    "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å:",
    { reply_markup:{ keyboard, resize_keyboard:true } }
  );
});

// 9) Webhook endpoint
app.post('/webhook', (req, res) => {
  bot.handleUpdate(req.body, res).catch(console.error);
});

// 10) –û–±—â–∏–π —Ç–µ–∫—Å—Ç-—Ö–µ–Ω–¥–ª–µ—Ä
bot.on('text', async ctx => {
  const txt    = ctx.message.text.trim();
  const chatId = String(ctx.chat.id);
  const upper  = txt.toUpperCase();

  // 10.1) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Å—Å–∏—é
  let session = sessions.get(chatId);
  if (!session) {
    session = { history: [] };
    sessions.set(chatId, session);
  }

  // 10.2) –ö–Ω–æ–ø–∫–∏-–≤–∏–¥–∂–µ—Ç—ã
  if (services[txt]) {
    return ctx.replyWithHTML(
      `–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ <b>${txt}</b> –∑–¥–µ—Å—å:`,
      { reply_markup:{ inline_keyboard:[[
          { text:'‚ñ∂ –û—Ç–∫—Ä—ã—Ç—å –≤–∏–¥–∂–µ—Ç', url:services[txt] }
      ]] } }
    );
  }

  // 10.3) Off-widget —Ç–µ–º—ã
  if (outsideTriggers.some(tr => upper.includes(tr))) {
    return ctx.reply(outsideWidgetResponse);
  }

  // 10.4) –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ–º—ã
  if (blockedTopics.some(bt => upper.includes(bt))) {
    return ctx.reply(blockedResponse);
  }

  // 10.5) –ù–µ –ø—Ä–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ
  if (!insuranceKeywords.some(kw => upper.includes(kw))) {
    return ctx.reply(outsideWidgetResponse);
  }

  // 10.6) –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –∏—Å—Ç–æ—Ä–∏—é
  session.history.push({ role:'user', content:txt });

  // 10.7) –°—Ç—Ä–æ–∏–º system-prompt
  const firstTime = !privacyMentioned.get(chatId);
  let systemPrompt = `
–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Straxovka-Go, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—é.
–û—Ç–≤–µ—á–∞–π:
‚Ä¢ –ö–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.
‚Ä¢ ‚Ä¢ –° –ø—Ä–∏–∑—ã–≤–æ–º –∫ –¥–µ–π—Å—Ç–≤–∏—é (‚Äú–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞‚Äù).
`;
  if (firstTime) {
    systemPrompt += `
–í –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —É–ø–æ–º—è–Ω–∏, —á—Ç–æ –º—ã ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –ü–î–Ω, –∏ –¥–∞–π —Å—Å—ã–ª–∫—É:
https://straxovka-go.ru/privacy
`;
    privacyMentioned.set(chatId, true);
  } else {
    systemPrompt += "\n–ù–µ —É–ø–æ–º–∏–Ω–∞–π –ø–æ–ª–∏—Ç–∏–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.";
  }

  // 10.8) –°–æ–±–∏—Ä–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
  const messages = [
    { role:'system', content:systemPrompt.trim() },
    ...session.history
  ];

  // 10.9) –ó–∞–ø—Ä–æ—Å –∫ OpenRouter
  try {
    const resp = await openai.chat.completions.create({
      model:       'openai/gpt-4o-mini', // –∏–ª–∏ –≤–∞—à–∞ –¥–æ—Å—Ç—É–ø–Ω–∞—è –º–æ–¥–µ–ª—å
      messages,
      temperature: 0.6,
      max_tokens: 200
    });
    const answer = resp.choices[0].message.content.trim();

    // 10.10) –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    session.history.push({ role:'assistant', content:answer });

    return ctx.reply(answer);
  } catch (err) {
    console.error("OpenRouter Error:", err);
    return ctx.reply("–£–ø—Å, –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –º–æ–¥–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
});

// 11) –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
app.listen(PORT, async () => {
  console.log(`üåê HTTP server on port ${PORT}`);
  await bot.telegram.setWebhook(`${DOMAIN}/webhook`);
  console.log(`‚úÖ Webhook registered at ${DOMAIN}/webhook`);
});
