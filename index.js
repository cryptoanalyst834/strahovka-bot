// index.js
import 'dotenv/config';
import express   from 'express';
import { Telegraf } from 'telegraf';
import OpenAI    from 'openai';

const {
  TELEGRAM_TOKEN,
  OPENROUTER_API_KEY,
  DOMAIN,
  PORT = 8080
} = process.env;

if (!TELEGRAM_TOKEN || !OPENROUTER_API_KEY || !DOMAIN) {
  console.error('‚ùå –ó–∞–¥–∞–π—Ç–µ TELEGRAM_TOKEN, OPENROUTER_API_KEY –∏ DOMAIN –≤ env');
  process.exit(1);
}

// In‚Äêmemory stores per chat
const privacyMentioned = new Map();
const sessions = new Map();

// 1) Express + healthcheck + webhook
const app = express();
app.use(express.json());
app.get('/', (_req, res) => res.send('OK'));

// 2) Telegram bot
const bot = new Telegraf(TELEGRAM_TOKEN);

// 3) OpenRouter client
const openai = new OpenAI({
  apiKey: OPENROUTER_API_KEY,
  baseURL: 'https://openrouter.ai/api/v1'
});

// 4) –í–∏–¥–∂–µ—Ç—ã
const services = {
  "–û–°–ê–ì–û":                   "https://widgets.inssmart.ru/contract/eosago?appId=bbac9045-39c4-5530-a953-d63f4d081fe0&secret=2d2759bd-a1b0-57a7-803b-520c1a262740",
  "–ú–ò–ù–ò-–ö–ê–°–ö–û":              "https://widgets.inssmart.ru/contract/kasko?appId=293563a6-dcb8-543c-84a7-7a455578884f&secret=5d05ad7d-7fc6-58b8-8851-6de24394a0a6",
  "–ò–ø–æ—Ç–µ–∫–∞":                 "https://widgets.inssmart.ru/contract/mortgage?appId=e06a1d3f-604c-52d2-bc8a-b9b8e2e7e167&secret=695aa6ff-001b-52ec-99de-0dbd38762b93",
  "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –∏–º—É—â–µ—Å—Ç–≤–∞":   "https://widgets.inssmart.ru/contract/property?appId=34daded4-ba8c-5e60-883b-bddd168b35b0&secret=ff271c00-fb5a-5de2-9b9e-fcfb8660da84",
  "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è":             "https://widgets.inssmart.ru/contract/travel?appId=a8bf576a-c303-5c66-8952-5a2a5bcf0b04&secret=95f250f5-b561-5593-99ad-575fec648e4c"
};

// 5) ¬´–í–Ω–µ –≤–∏–¥–∂–µ—Ç–æ–≤¬ª
const outsideTriggers = [
  "–ö–ê–°–ö–û –ü–û –†–ò–°–ö–ê–ú","–¢–û–¢–ê–õ","–£–ì–û–ù",
  "–î–ú–°","–°–¢–†–ê–•–û–í–ê–ù–ò–ï –ë–ò–ó–ù–ï–°–ê"
];
const outsideWidgetResponse = `
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ—Ç –≤–∏–¥ –æ–Ω–ª–∞–π–Ω-–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.  
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–¥–±–æ—Ä–∞:

üìß info@straxovka-go.ru  
üåê https://straxovka-go.ru  
üì± WhatsApp: +7 989 120 66 37

–ú—ã ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –ü–î–Ω.  
–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: https://straxovka-go.ru/privacy
`.trim();

// 6) –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
const insuranceKeywords = [
  "–û–°–ê–ì–û","–ö–ê–°–ö–û","–î–ú–°","–ò–ü–û–¢–ï–ö–ê",
  "–ò–ú–£–©–ï–°–¢–í–û","–°–¢–†–ê–•–û–í–ê–ù–ò–ï","–ü–û–õ–ò–°",
  "–î–û–ö–£–ú–ï–ù–¢","–î–¢–ü"
];

// 7) /start
bot.start(ctx => {
  const keyboard = Object.keys(services).map(k => ([{ text: k }]));
  return ctx.reply(
    'üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π sales-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. ' +
    '–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å:',
    { reply_markup:{ keyboard, resize_keyboard:true } }
  );
});

// 8) Webhook
app.post('/webhook', (req, res) => {
  bot.handleUpdate(req.body, res).catch(console.error);
});

// 9) –¢–µ–∫—Å—Ç
bot.on('text', async ctx => {
  const txt = ctx.message.text.trim();
  const chatId = String(ctx.chat.id);
  const upper = txt.toUpperCase();

  // 9.1 –º–µ–Ω—é-–∫–Ω–æ–ø–∫–∞
  if (services[txt]) {
    return ctx.replyWithHTML(
      `–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ <b>${txt}</b> –∑–¥–µ—Å—å:`,
      { reply_markup:{ inline_keyboard:[
        [{ text:'‚ñ∂ –û—Ç–∫—Ä—ã—Ç—å –≤–∏–¥–∂–µ—Ç', url:services[txt] }]
      ] } }
    );
  }

  // 9.2 ¬´–≤–Ω–µ-–≤–∏–¥–∂–µ—Ç–Ω—ã–µ¬ª
  if (outsideTriggers.some(tr => upper.includes(tr))) {
    return ctx.reply(outsideWidgetResponse);
  }

  // 9.3 –Ω–µ –ø—Ä–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ
  if (!insuranceKeywords.some(kw => upper.includes(kw))) {
    return ctx.reply(outsideWidgetResponse);
  }

  // 9.4 AI-—Å–µ—Å—Å–∏—è
  let session = sessions.get(chatId);
  if (!session) {
    session = { history: [] };
    sessions.set(chatId, session);
  }
  session.history.push({ role:'user', content:txt });

  // –§–æ—Ä–º–∏—Ä—É–µ–º system prompt
  const firstTime = !privacyMentioned.get(chatId);
  let systemPrompt = `
–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π sales-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Straxovka-Go, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—é.
–¢–≤–æ—è —Ü–µ–ª—å ‚Äî –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–¥–∞—Ç—å –ø–æ–ª–∏—Å, –∑–∞–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞—Ö–∏ –∏ –±–æ–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞:
‚Äî –ü–æ–∫–∞–∂–∏ —ç–º–ø–∞—Ç–∏—é: ¬´–ü–æ–Ω–∏–º–∞—é –≤–∞—à–∏ –æ–ø–∞—Å–µ–Ω–∏—è‚Ä¶¬ª
‚Äî –†–∞—Å—Å–∫–∞–∂–∏ –≤—ã–≥–æ–¥—ã: ¬´–≠—Ç–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç –≤–∞–º –¥–æ 30%‚Ä¶¬ª
‚Äî –î—Ä–∞–π–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é: ¬´–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è¬ª
`;
  if (firstTime) {
    systemPrompt += `
–í —ç—Ç–æ–º –æ—Ç–≤–µ—Ç–µ —É–ø–æ–º—è–Ω–∏, —á—Ç–æ –º—ã ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –ü–î–Ω, –∏ –¥–∞–π —Å—Å—ã–ª–∫—É: https://straxovka-go.ru/privacy
`;
    privacyMentioned.set(chatId, true);
  } else {
    systemPrompt += `\n–ù–µ —É–ø–æ–º–∏–Ω–∞–π –ø–æ–ª–∏—Ç–∏–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ.`;
  }

  // –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
  const messages = [
    { role:'system', content:systemPrompt.trim() },
    ...session.history
  ];

  try {
    const resp = await openai.chat.completions.create({
      model:       'openai/gpt-4o-mini',  // –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω—É—é –º–æ–¥–µ–ª—å OpenRouter
      messages,
      temperature: 0.6,
      max_tokens: 250
    });
    const answer = resp.choices[0].message.content.trim();
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    session.history.push({ role:'assistant', content:answer });
    return ctx.reply(answer);
  } catch (err) {
    console.error('OpenRouter Error:', err);
    return ctx.reply('–£–ø—Å, –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –º–æ–¥–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// 10) –ó–∞–ø—É—Å–∫ + webhook
app.listen(PORT, async () => {
  console.log(`üåê HTTP server on port ${PORT}`);
  await bot.telegram.setWebhook(`${DOMAIN}/webhook`);
  console.log(`‚úÖ Webhook registered at ${DOMAIN}/webhook`);
});
