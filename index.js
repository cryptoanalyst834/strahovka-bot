import 'dotenv/config';
import express           from 'express';
import { Telegraf, session } from 'telegraf';
import OpenAI            from 'openai';

const {
  TELEGRAM_TOKEN,
  OPENROUTER_API_KEY,
  DOMAIN,
  PORT = 8080
} = process.env;

if (!TELEGRAM_TOKEN || !OPENROUTER_API_KEY || !DOMAIN) {
  console.error('‚ùå –ó–∞–¥–∞–π—Ç–µ TELEGRAM_TOKEN, OPENROUTER_API_KEY –∏ DOMAIN –≤ env');
  process.exit(1);
}

// 1) Express + Webhook endpoint
const app = express();
app.use(express.json());
app.get('/', (_req, res) => res.send('OK'));  // healthcheck

// 2) Telegraf + session
const bot = new Telegraf(TELEGRAM_TOKEN);
bot.use(session());

const openai = new OpenAI({
  apiKey:  OPENROUTER_API_KEY,
  baseURL: 'https://openrouter.ai/api/v1'
});

// 3) –í–∏–¥–∂–µ—Ç-—Å—Å—ã–ª–∫–∏
const services = {
  –û–°–ê–ì–û:                   'https://widgets.inssmart.ru/contract/eosago?appId=bbac9045-39c4-5530-a953-d63f4d081fe0&secret=2d2759bd-a1b0-57a7-803b-520c1a262740',
  '–ú–ò–ù–ò-–ö–ê–°–ö–û':            'https://widgets.inssmart.ru/contract/kasko?appId=293563a6-dcb8-543c-84a7-7a455578884f&secret=5d05ad7d-7fc6-58b8-8851-6de24394a0a6',
  –ò–ø–æ—Ç–µ–∫–∞:                 'https://widgets.inssmart.ru/contract/mortgage?appId=e06a1d3f-604c-52d2-bc8a-b9b8e2e7e167&secret=695aa6ff-001b-52ec-99de-0dbd38762b93',
  '–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ –∏–º—É—â–µ—Å—Ç–≤–∞': 'https://widgets.inssmart.ru/contract/property?appId=34daded4-ba8c-5e60-883b-bddd168b35b0&secret=ff271c00-fb5a-5de2-9b9e-fcfb8660da84',
  –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è:            'https://widgets.inssmart.ru/contract/travel?appId=a8bf576a-c303-5c66-8952-5a2a5bcf0b04&secret=95f250f5-b561-5593-99ad-575fec648e4c'
};

// 4) –®–∞–±–ª–æ–Ω ¬´–≤–Ω–µ-–≤–∏–¥–∂–µ—Ç–Ω—ã—Ö¬ª –∑–∞–ø—Ä–æ—Å–æ–≤
const outsideTriggers = [
  '–ö–ê–°–ö–û –ø–æ —Ä–∏—Å–∫–∞–º', '–¢–û–¢–ê–õ', '–£–ì–û–ù',
  '–î–ú–°', '–°–¢–†–ê–•–û–í–ê–ù–ò–ï –ë–ò–ó–ù–ï–°–ê'
];
const outsideWidgetResponse = `
–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω—É–∂–Ω—ã–π –≤–∏–¥ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è –≤ –æ–Ω–ª–∞–π–Ω-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω.
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:

üìß info@straxovka-go.ru  
üåê https://straxovka-go.ru  
üì± WhatsApp: +7 989 120 66 37

–ú—ã ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.  
–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: https://straxovka-go.ru/privacy
`.trim();

// 5) /start ‚Äî –º–µ–Ω—é
bot.start(ctx => {
  const keyboard = Object.keys(services).map(k => ([{ text: k }]));
  return ctx.reply(
    'üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫. –ü–æ–º–æ–≥—É –±—ã—Å—Ç—Ä–æ –æ—Ñ–æ—Ä–º–∏—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–∫—É. ' +
    '–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å:',
    { reply_markup:{ keyboard, resize_keyboard:true } }
  );
});

// 6) Webhook handler
app.post('/webhook', (req, res) => {
  bot.handleUpdate(req.body, res).catch(console.error);
});

// 7) –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
bot.on('text', async ctx => {
  const txt = ctx.message.text.trim();

  // 7.1 ‚Äî –∫–Ω–æ–ø–∫–∞-–≤–∏–¥–∂–µ—Ç
  if (services[txt]) {
    return ctx.replyWithHTML(
      `–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è <b>${txt}</b>:`,
      { reply_markup:{ inline_keyboard:[
          [{ text:'‚ñ∂ –û—Ç–∫—Ä—ã—Ç—å –≤–∏–¥–∂–µ—Ç', url:services[txt] }]
      ] } }
    );
  }

  // 7.2 ‚Äî ¬´–≤–Ω–µ-–≤–∏–¥–∂–µ—Ç–Ω—ã–µ¬ª —Ç–µ–º—ã
  if (outsideTriggers.some(tr => txt.toUpperCase().includes(tr))) {
    return ctx.reply(outsideWidgetResponse);
  }

  // 7.3 ‚Äî OpenRouter –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  const firstTime = !ctx.session.privacyMentioned;
  let systemPrompt = `
–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—é Straxovka-Go.
–û—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ –∏ –ø–æ —Ç–µ–º–µ.
`;
  if (firstTime) {
    systemPrompt += `
–í –ø–µ—Ä–≤–æ–º –æ—Ç–≤–µ—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ø–æ–º—è–Ω–∏, —á—Ç–æ –º—ã ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –ü–î–Ω, –∏ –¥–∞–π —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª–∏—Ç–∏–∫—É: https://straxovka-go.ru/privacy
`;
    ctx.session.privacyMentioned = true;
  } else {
    systemPrompt += `
–ù–µ —É–ø–æ–º–∏–Ω–∞–π –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ.
`;
  }

  try {
    const resp = await openai.chat.completions.create({
      model:       'openai/gpt-3.5-turbo',
      messages:    [
        { role:'system', content:systemPrompt.trim() },
        { role:'user',   content:txt }
      ],
      temperature: 0.5,
      max_tokens:  200
    });
    return ctx.reply(resp.choices[0].message.content.trim());
  } catch (err) {
    console.error('OpenRouter Error:', err);
    return ctx.reply('–£–ø—Å, –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –º–æ–¥–µ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// 8) –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ + —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è webhook
app.listen(PORT, async () => {
  console.log(`üåê HTTP server on port ${PORT}`);
  await bot.telegram.setWebhook(`${DOMAIN}/webhook`);
  console.log(`‚úÖ Webhook set to ${DOMAIN}/webhook`);
});
